<?php
declare(strict_types=1);

namespace App\Model\Orm\Repository;

use App\Model\Orm\Entity\News;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\EntityRepository;

class NewsRepository extends EntityRepository
{
    public function __construct(EntityManagerInterface $em, string $entityClass = News::class)
    {
        parent::__construct($em, $em->getClassMetadata($entityClass));
    }

    public function findAllVisible(): array
    {
        return $this->findBy(['deleted' => false], ['visibleFrom' => 'DESC']);
    }

    public function findAllVisibleUser($user): array
    {
        return $this->findBy(['deleted' => false, 'author' => $user], ['visibleFrom' => 'DESC']);
    }

    public function findImportant(): array
    {
        return $this->findBy(['important' => true, 'deleted' => false], ['visibleFrom' => 'DESC']);
    }

    public function findGlobal(): array
    {
        return $this->findBy(['global' => true, 'deleted' => false], ['createdAt' => 'asc']);
    }

    public function setDeleted(int $id): void
    {
        $news = $this->find($id);
        $news->setDeleted(true);
        $this->getEntityManager()->flush();
    }

    public function findBy(array $criteria, ?array $orderBy = null, $limit = null, $offset = null)
    {
        return parent::findBy($criteria, $orderBy, $limit, $offset); // TODO: Change the autogenerated stub
    }

    public function findOneBy(array $criteria, ?array $orderBy = null)
    {
        return parent::findOneBy($criteria, $orderBy); // TODO: Change the autogenerated stub
    }

    public function remove(News $news): void
    {
        $this->getEntityManager()->remove($news);
    }

    public function save(News $news): void
    {
        $this->getEntityManager()->persist($news);
        $this->getEntityManager()->flush();
    }

    public function count(array $criteria): int
    {
        return parent::count($criteria);
    }
}